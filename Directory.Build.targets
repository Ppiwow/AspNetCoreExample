<Project>
  <PropertyGroup>
    <CFPMainProject>src\AspNetCoreExample</CFPMainProject>
    <CFPApplicationName>$(AssemblyName)</CFPApplicationName>
    <CFPVersion>$(Version)</CFPVersion>
    <CFPArtifactId>$(AssemblyName)</CFPArtifactId>
    <!-- We need to package it somewhere in Artifactory / Nexus -->
    <CFPGroupId>$(AssemblyName)</CFPGroupId>
    <!-- group.id.with.dots:artifactid:version:classifier:port -->
    <!-- com.example:foo:1.0.0:stubs:10000 -->
    <CFPStubIds></CFPStubIds>

  </PropertyGroup>
  <ItemGroup>
    <UnitTest Include="test\UnitTests" />


    <!--<SmokeTest></SmokeTest>
    <IntegrationTest></IntegrationTest>-->
  </ItemGroup>

  <PropertyGroup>
    <_CFPMainProjectFullPath>$([MSBuild]::NormalizeDirectory($(SolutionDir)\$(CFPMainProject)))</_CFPMainProjectFullPath>
    <!-- Condition="$(_CFPMainProjectFullPath) == $(ProjectDir)" -->
  </PropertyGroup>

  <Target Name="CFPAppName" Condition="$(_CFPMainProjectFullPath) == $(ProjectDir)">
    <Exec Command="echo $(CFPApplicationName)"/>
  </Target>

  <Target Name="CFPVersion" Condition="$(_CFPMainProjectFullPath) == $(ProjectDir)">
    <Exec Command="echo $(CFPVersion)"/>
  </Target>

  <Target Name="CFPArtifactId" Condition="$(_CFPMainProjectFullPath) == $(ProjectDir)">
    <Exec Command="echo $(CFPArtifactId)"/>
  </Target>

  <Target Name="CFPGroupId" Condition="$(_CFPMainProjectFullPath) == $(ProjectDir)">
    <Exec Command="echo $(CFPGroupId)"/>
  </Target>

  <Target Name="CFPStubIds" Condition="$(_CFPMainProjectFullPath) == $(ProjectDir)">
    <Exec Command="echo $(CFPStubIds)"/>
  </Target>

  <Target Name="CFPUnitTests" Condition="$(_CFPMainProjectFullPath) == $(ProjectDir)">
    <!-- run unit and integration tests -->
    <Exec Command="dotnet test $(SolutionDir)\%(UnitTest.Identity)" Condition="%(UnitTest.Identity) != ''"/>
  </Target>

  <Target Name="CFPIntegrationTests" Condition="$(_CFPMainProjectFullPath) == $(ProjectDir)">
    <!-- <Exec Command="./run_tests.sh"/> -->
    <Exec Command="echo $(SolutionDir)" />
  </Target>

  <Target Name="CFPApiCompatibilityTest" Condition="$(_CFPMainProjectFullPath) == $(ProjectDir)">
    <!-- <Exec Command="./run_tests.sh"/> -->
    <Exec Command="echo $(SolutionDir)" />
  </Target>

  <Target Name="CFPSmokeTests" Condition="$(_CFPMainProjectFullPath) == $(ProjectDir)">
    <Exec Command='curl "$(APPLICATION_URL)/api/Customers" --fail' />
  </Target>

  <Target Name="CFPE2eTests" Condition="$(_CFPMainProjectFullPath) == $(ProjectDir)">
    <Exec Command='curl "$(APPLICATION_URL)/api/Customers" --fail' />
  </Target>

  <Target Name="CFPPublish" Condition="$(_CFPMainProjectFullPath) == $(ProjectDir)">
    <Exec Command="dotnet publish -c Release" />
    <!-- Copy manifest and other CF rated files -->
    <Exec Command="cp $(SolutionDir).* $(ProjectDir)$(OutputPath)publish || echo 'Done' " />
    <!-- Windows publish -->
    <Exec Command="powershell Compress-Archive $(ProjectDir)$(OutputPath)\publish\* $(ProjectDir)$(OutputPath)\publish\publish.zip -Force" Condition="$([MSBuild]::IsOsPlatform(Windows))"/>
    <!-- Linux publish -->
    <Exec Command="zip publish.zip ./*" WorkingDirectory="$(ProjectDir)$(OutputPath)publish" Condition="$([MSBuild]::IsOsPlatform(Linux))"  />
    <Exec Command='echo Trying to upload file: $(ProjectDir)$(OutputPath)publish/publish.zip to location: $(REPO_WITH_BINARIES_FOR_UPLOAD)/$(CFPGroupId)/$(CFPApplicationName)/$(PIPELINE_VERSION)/$(CFPApplicationName)-$(PIPELINE_VERSION).zip' Condition="$([MSBuild]::IsOsPlatform(Linux))" />
    <Exec Command='curl -u "$(M2_SETTINGS_REPO_USERNAME):$(M2_SETTINGS_REPO_PASSWORD)" -X PUT "$(REPO_WITH_BINARIES_FOR_UPLOAD)/$(CFPGroupId)/$(CFPApplicationName)/$(PIPELINE_VERSION)/$(CFPApplicationName)-$(PIPELINE_VERSION).zip" --upload-file "publish.zip" --fail'  WorkingDirectory="$(ProjectDir)$(OutputPath)publish" Condition="$([MSBuild]::IsOsPlatform(Linux))" />
  </Target>
</Project>
